name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: image

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
      - name: Build and push Docker images
        uses: docker/build-push-action@v1.1.0
        with:
          # Username used to log in to a Docker registry. If not set then no login will occur
          username: ${{ secrets.DOCKER_USERNAME }}
          # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
          password: ${{ secrets.DOCKER_PASSWORD }}
          # Server address of Docker registry. If not set then will default to Docker Hub
          #registry: jibinpb
          # Docker repository to tag the image with
          repository: jibinpb/aspnetcore-docker-webapp
          # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
          tags: latest
          # Automatically tags the built image with the git reference as per the readme
          #tag_with_ref: # optional
          # Automatically tags the built image with the git short SHA as per the readme
          #tag_with_sha: # optional
          # Path to the build context
          #path: # optional, default is .
          # Path to the Dockerfile (Default is '{path}/Dockerfile')
          #dockerfile: # optional
          # Sets the target stage to build
          #target: # optional
          # Always attempt to pull a newer version of the image
          #always_pull: # optional
          # Comma-delimited list of build-time variables
          #build_args: # optional
          # Comma-delimited list of images to consider as cache sources
          #cache_froms: # optional
          # Comma-delimited list of labels to add to the built image
          #labels: # optional
          # Adds labels with git repository information to the built image
          #add_git_labels: # optional
          # Whether to push the image
          #push: # optional, default is true
